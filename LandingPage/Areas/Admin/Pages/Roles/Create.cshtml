@page
@model ID6NP.Areas.Admin.Pages.Roles.CreateModel
@{
}
	@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

   @if (SignInManager.IsSignedIn(User))
{

    var currentUser = UserManager.FindByEmailAsync(User.Identity.Name).Result;
    //find if current user tied to admin role
	var adminRole = UserManager.GetRolesAsync(currentUser).Result;
    


@if(adminRole.Contains("Admin")){
<h1>Create Role</h1>

<div class="row">
    <div class="col-sm-12">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RoleName"></label>
                <input asp-for="RoleName" />
                <span asp-validation-for="RoleName" class="text-danger" ></span>
            </div>
            <button type="submit" class="btn btn-primary">Create Role</button>
        </form>
    </div>
</div>
}
    else
    {
                <partial name="_unauthorizedPartial"/>
    }
}
else
{
        <partial name="_unauthorizedPartial" />
}


