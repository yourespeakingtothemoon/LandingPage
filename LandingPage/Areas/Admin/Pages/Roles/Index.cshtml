@page
@model ID6NP.Areas.Admin.Pages.Roles.IndexModel
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
}
   @if (SignInManager.IsSignedIn(User))
{

    var currentUser = UserManager.FindByEmailAsync(User.Identity.Name).Result;
    //find if current user tied to admin role
	var adminRole = UserManager.GetRolesAsync(currentUser).Result;
    


@if(adminRole.Contains("Admin")){
<div class="row">
    <div class="col-sm-6">
        <h1>Current Roles</h1>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 text-right">
        <a asp-page="/Roles/Create">Create Role</a> | <a asp-page="/Roles/AddUseRole">Add User To Role</a>
    </div>
</div>
@if (Model.Roles != null && Model.Roles.Count() > 0)
{
<div class="row">
    <div class="col-sm-12">
        <table class="table w-100">
            <thead>
                <tr>
                    <th class="w-25">Id</th>
                    <th>Name</th>
                </tr>
            </thead>
            <tbody>
                 @foreach(var role in Model.Roles) { 
                <tr>
                    <td>@role.Id</td>
                    <td>@role.Name</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>
}
else
{
    <h3>No roles in database</h3>
}
}
    else
    {
        <partial name="_unauthorizedPartial" />
    }
}
else
{
    <partial name="_unauthorizedPartial" />
}


